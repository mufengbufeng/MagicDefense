
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace GameConfig
{
public partial class LanguageConfig
{
    private readonly System.Collections.Generic.Dictionary<int, Language> _dataMap;
    private readonly System.Collections.Generic.List<Language> _dataList;
    
    public LanguageConfig(ByteBuf _buf)
    {
        _dataMap = new System.Collections.Generic.Dictionary<int, Language>();
        _dataList = new System.Collections.Generic.List<Language>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            Language _v;
            _v = Language.DeserializeLanguage(_buf);
            _dataList.Add(_v);
            _dataMap.Add(_v.Id, _v);
        }
    }

    public System.Collections.Generic.Dictionary<int, Language> DataMap => _dataMap;
    public System.Collections.Generic.List<Language> DataList => _dataList;

    public Language GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
    public Language Get(int key) => _dataMap[key];
    public Language this[int key] => _dataMap[key];

    public void ResolveRef(Tables tables)
    {
        foreach(var _v in _dataList)
        {
            _v.ResolveRef(tables);
        }
    }

}

}

